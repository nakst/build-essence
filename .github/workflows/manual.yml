name: manual

on:
  workflow_dispatch

jobs:

  build-mac:
    runs-on: macos-10.15
    timeout-minutes: 180
    steps:
      - name: checkout
        uses: actions/checkout@v2          
      - name: install dependencies
        run: brew install gcc@11 nasm ctags xz coreutils gnu-sed
      - name: build
        id: build
        run: git clone --depth=1 https://gitlab.com/nakst/essence.git && cd essence && mkdir -p bin && gcc -o bin/script util/script.c -g -Wall -Wextra -O2 -pthread -ldl && bin/script --start=AutomationBuildDefault util/start.script

  build-full:
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    steps:
      - name: checkout
        uses: actions/checkout@v2          
      - name: install dependencies
        run: |
          sudo apt-get update  
          sudo apt-get install --no-install-recommends -y ca-certificates xz-utils texinfo patch make curl \
            ctags m4 nasm meson ninja-build libharfbuzz-dev qemu qemu-utils qemu-system-x86 gcc g++ libmpc-dev libmpfr-dev libgmp-dev
          pip install mako
      - name: build
        id: build
        run: git clone --depth=1 https://gitlab.com/nakst/essence.git && cd essence && mkdir -p bin && gcc -o bin/script util/script.c -g -Wall -Wextra -O2 -pthread -ldl && bin/script --start=AutomationBuild util/start.script

  run-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install dependencies
        run: |
          sudo apt-get update  
          sudo apt-get install --no-install-recommends -y ca-certificates xz-utils texinfo patch make curl \
            ctags m4 nasm meson ninja-build libharfbuzz-dev qemu qemu-utils qemu-system-x86 gcc g++ libmpc-dev libmpfr-dev libgmp-dev
          pip install mako
      - name: build
        id: build
        run: git clone --depth=1 https://gitlab.com/nakst/essence.git && cd essence && mkdir -p bin && gcc -o bin/script util/script.c -g -Wall -Wextra -O2 -pthread -ldl && bin/script --start=AutomationRunTests util/start.script
      - name: upload
        id: upload       
        uses: actions/upload-artifact@v2
        with:
          name: debug-info
          path: essence
      - name: check
        id: check
        run: "test ! -s essence/bin/Logs/Test\\ Failures.txt"
        
