
name: build-essence

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    steps:

      - name: checkout
        uses: actions/checkout@v2          

      - name: install dependencies
        run: |
          sudo apt-get install --no-install-recommends -y \
            ca-certificates \
            xz-utils        \
            texinfo         \
            patch           \
            make            \
            curl            \
            m4              \
            nasm            \
            meson           \
            qemu            \
            qemu-utils      \
            gcc             \
            g++

      - name: build
        id: build
        run: ./build.sh
        
      - name: release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.build.outputs.RELEASE_NAME }}
          release_name: ${{ steps.build.outputs.RELEASE_NAME }}
          body: |
            Essence built from commit ${{ steps.build.outputs.COMMIT }}.

      - name: upload
        id: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ steps.build.outputs.OUTPUT_BINARY }}
          asset_name: ${{ steps.build.outputs.OUTPUT_BINARY }}
          asset_content_type: application/x-compressed

      - name: upload_ova
        id: upload_ova
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ steps.build.outputs.OVA_OUTPUT_BINARY }}
          asset_name: ${{ steps.build.outputs.OVA_OUTPUT_BINARY }}
          asset_content_type: application/x-compressed

      - name: upload_debug_info
        id: upload_debug_info
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ steps.build.outputs.DEBUG_OUTPUT_BINARY }}
          asset_name: ${{ steps.build.outputs.DEBUG_OUTPUT_BINARY }}
          asset_content_type: application/x-compressed
